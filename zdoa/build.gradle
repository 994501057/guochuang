/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
    	classpath("org.springframework:springloaded:1.2.8.RELEASE")
    }
}

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

// 设置 Java 源码所在目录
sourceSets {  
    main {  
        java {  
            srcDir 'src/main/java'
        }  
        resources {  
            srcDir 'src/main/resources'
        }  
    }  
} 

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    // jcenter()
    maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
}

dependencies {
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.0.5.RELEASE'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: '2.0.5.RELEASE'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '2.0.5.RELEASE'
	compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '2.0.5.RELEASE'
	providedCompile group: 'org.springframework.boot', name:'spring-boot-starter-tomcat', version: '2.0.5.RELEASE'
	// AOP
	compile group: 'aspectj', name: 'aspectjrt', version: '1.5.4'
	compile group: 'aspectj', name: 'aspectjweaver', version: '1.5.4'
	// mysql
	compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.11'
	// mybatis
	compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '1.3.2'
	// JSP支持
	compile group: 'jstl', name: 'jstl', version: '1.2'
	compile group: 'taglibs' ,	name:'standard'	,	version:'1.1.2'
	compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version: '9.0.10'
	// dbcp
	compile 'commons-dbcp:commons-dbcp:1.4'
	// log4j 
	compile 'log4j:log4j:1.2.12'
	
	// shiro+encahe
	compile group: 'net.sf.ehcache', name:'ehcache', version:'2.9.1'
	compile group: 'net.sf.ehcache', name:'ehcache-web', version:'2.0.4'
	compile 'org.apache.shiro:shiro-core:1.3.2'
	compile 'org.apache.shiro:shiro-web:1.3.2'
	compile 'org.apache.shiro:shiro-spring:1.3.2'
	compile 'org.apache.shiro:shiro-ehcache:1.3.2'
	// JSOUP
	compile 'org.jsoup:jsoup:1.9.2'
	
	// commons-lang
	compile 'commons-lang:commons-lang:2.6'
	compile 'commons-collections:commons-collections:3.2.2'
	compile 'commons-codec:commons-codec:1.10'
		// file upload
	compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.3'
	//pagehelper
	compile group: 'com.github.pagehelper', name: 'pagehelper-spring-boot-starter', version: '1.2.5'
	compile group: 'com.github.pagehelper', name: 'pagehelper-spring-boot-autoconfigure', version: '1.2.5'
	compile group: 'com.github.pagehelper', name: 'pagehelper', version: '5.1.2'
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}
configurations.all {
	// remove default logger
	exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	exclude group: 'net.sf.ehcache', module: 'ehcache-core'
}
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}
tasks.withType(Javadoc) {
	options.encoding 'UTF-8'
	options.charSet 'UTF-8'
}
